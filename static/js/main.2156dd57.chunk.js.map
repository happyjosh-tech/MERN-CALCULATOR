{"version":3,"sources":["components/Button/Button.js","components/ClearButton/ClearButton.js","components/EqualsButton/EqualsButton.js","components/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","onClick","props","handleClick","children","this","Component","ClearButton","handleClear","EqualsButton","handleSolve","Calculator","useState","input","setInput","prevNum","setPrevNum","curNum","setCurNum","operator","setOperator","clickButton","e","console","log","operation_Func","useEffect","solution","x","y","parseFloat","type","readOnly","value","placeholder","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2156dd57.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n// import './Button.css';\r\n\r\nclass Button extends Component {\r\n    render() {\r\n        return(\r\n            <p className=\"col-auto\">\r\n               <button className=\"button\" onClick={()=>this.props.handleClick(this.props.children)}>\r\n                    {this.props.children}\r\n               </button>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button","import React, {Component} from 'react';\r\n// import './Button.css';\r\n\r\nclass ClearButton extends Component {\r\n    render() {\r\n        return(\r\n            <p className=\"col-auto\">\r\n               <button className=\"button\" onClick={()=>this.props.handleClear(this.props.children)}>\r\n                    {this.props.children}\r\n               </button>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClearButton","import React, {Component} from 'react';\r\n// import './Button.css';\r\n\r\nclass EqualsButton extends Component {\r\n    render() {\r\n        return(\r\n            <p className=\"col-auto\">\r\n               <button className=\"button btn--yellow\" onClick={()=>this.props.handleSolve(this.props.children)}>\r\n                    {this.props.children}\r\n               </button>\r\n            </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EqualsButton","import React, {useState, useEffect} from 'react';\r\nimport Button from './Button/Button';\r\nimport ClearButton from './ClearButton/ClearButton';\r\nimport EqualsButton from './EqualsButton/EqualsButton';\r\n\r\n\r\nfunction Calculator(props){\r\n\r\n  const [input, setInput] = useState('');\r\n  const [prevNum, setPrevNum] = useState('');\r\n  const [curNum, setCurNum] = useState('');\r\n  const [operator, setOperator] = useState('');\r\n  const clickButton = (e) => {\r\n      if(e===\"+\" || e==='-' ||e=== '/' ||e=== '*'){\r\n        setOperator(e)\r\n        console.log(e);\r\n      } else {\r\n        \r\n        setInput(input + e);\r\n        console.log(input);\r\n      }  \r\n\r\n  }\r\n  const handleClear = () =>{\r\n      setInput('');\r\n      setPrevNum('');\r\n      setCurNum('');\r\n      setOperator('');\r\n  }\r\n  const addZeroToInput = (e)=>{\r\n      if(input!==''){\r\n        setInput(input + e);\r\n        console.log(input);\r\n      }\r\n  }\r\n  const addDecimalToInput = (e)=>{\r\n      if(input.indexOf('.')=== -1){\r\n          setInput(input+e)\r\n          console.log(input);\r\n      }\r\n  }\r\n  const solve = () =>{\r\n     setCurNum(input);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const math_it_Up = {\r\n        '+': function(x,y){return x + y},\r\n        '-': function(x,y){return x - y},\r\n        '*':function(x,y){return x*y},\r\n        '/':function(x,y){return x/y}\r\n    };\r\n    if(curNum !== ''){\r\n        console.log(curNum);\r\n         if(operator !== ''){\r\n         //let solution = Math.floor(parseFloat(prevNum) + parseFloat(curNum));\r\n         let solution = math_it_Up[operator](parseFloat(prevNum),parseFloat(curNum));\r\n         setInput(solution);\r\n         setOperator('');\r\n         setCurNum('');}\r\n         \r\n    } \r\n  }, [curNum,operator, prevNum])\r\n    function operation_Func(e) {\r\n        setPrevNum(input);\r\n        setInput('');\r\n        setOperator(e);\r\n    }\r\n    return(\r\n        <>\r\n            <main className=\"main\">\r\n        <div className=\"card calc-body\">\r\n            <div className=\"card-body\">\r\n            \r\n            <span className=\"card-title logo\">re<span className=\"big-A\">A</span>ct</span>\r\n            <div className=\"screen mx-auto\">\r\n                <div className=\"screen__inner\">\r\n                  <input type=\"text\" readOnly className=\"output\" value={input} placeholder=\"0\"/>\r\n                </div>\r\n              </div>\r\n              <div className=\"power-btns\">\r\n                <div className=\"left\">\r\n                  <div className=\"label\"></div>\r\n                </div>\r\n                <div className=\"right\">\r\n                  <div className=\"label\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-body buttons-grid\">\r\n                <div className=\"row\">\r\n                    <Button handleClick={clickButton}></Button>\r\n                   <Button handleClick={clickButton}>7</Button>\r\n                    <Button handleClick={clickButton}>8</Button>\r\n                   <Button handleClick={clickButton}>9</Button>  \r\n                   <Button handleClick={operation_Func}>/</Button>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <Button handleClick={clickButton}></Button>\r\n                    {/* <p className=\"col-auto\">\r\n                        <Button handleClick={clickButton} id=\"4\" onClick={(e)=>{setAction(e.target.id)}}>4</button>\r\n                    </p> */}\r\n                    <Button handleClick={clickButton}>4</Button>\r\n                    <Button handleClick={clickButton}>5</Button>\r\n                    <Button handleClick={clickButton}>6</Button>\r\n                    <Button handleClick={operation_Func}>*</Button>\r\n                </div>\r\n                <div className=\"row\">\r\n                   <Button handleClick={clickButton}>%</Button>\r\n                   <Button handleClick={clickButton}>3</Button>\r\n                   <Button handleClick={clickButton}>2</Button>\r\n                   <Button handleClick={clickButton}>1</Button>\r\n                   <Button handleClick={operation_Func}>-</Button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ClearButton handleClear={handleClear}>CE</ClearButton>\r\n                   <Button handleClick={addZeroToInput}>0</Button>\r\n                   <Button handleClick={addDecimalToInput}>.</Button>\r\n                   <EqualsButton handleSolve={solve}>=</EqualsButton>\r\n                   <Button handleClick={operation_Func}>+</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n","import React  from \"react\";\r\nimport Calculator from './components/calculator';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Calculator/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}